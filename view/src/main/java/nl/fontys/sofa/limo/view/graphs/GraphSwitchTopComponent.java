/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package nl.fontys.sofa.limo.view.graphs;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;
import javafx.scene.chart.BarChart;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;
import javafx.scene.chart.Chart;
import javafx.scene.chart.PieChart;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//nl.fontys.sofa.limo.view.graphs//GraphSwitch//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "GraphSwitchTopComponent",
        //iconBase="SET/PATH/TO/ICON/HERE", 
        persistenceType = TopComponent.PERSISTENCE_NEVER
)
@TopComponent.Registration(mode = "properties", openAtStartup = false)
@ActionID(category = "Window", id = "nl.fontys.sofa.limo.view.graphs.GraphSwitchTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_GraphSwitchAction",
        preferredID = "GraphSwitchTopComponent"
)
@Messages({
    "CTL_GraphSwitchAction=GraphSwitch",
    "CTL_GraphSwitchTopComponent=GraphSwitch Window",
    "HINT_GraphSwitchTopComponent=This is a GraphSwitch window"
})
public final class GraphSwitchTopComponent extends TopComponent {

    public GraphSwitchTopComponent() {
        initComponents();
        setName(Bundle.CTL_GraphSwitchTopComponent());
        setToolTipText(Bundle.HINT_GraphSwitchTopComponent());
        putClientProperty(TopComponent.PROP_CLOSING_DISABLED, Boolean.TRUE);

    }

    private Class<? extends Chart> chartClass;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pieSelect = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));

        org.openide.awt.Mnemonics.setLocalizedText(pieSelect, org.openide.util.NbBundle.getMessage(GraphSwitchTopComponent.class, "GraphSwitchTopComponent.text")); // NOI18N
        pieSelect.setName(""); // NOI18N
        pieSelect.setOpaque(false);
        pieSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pieSelectActionPerformed(evt);
            }
        });
        add(pieSelect);

        org.openide.awt.Mnemonics.setLocalizedText(jButton2, org.openide.util.NbBundle.getMessage(GraphSwitchTopComponent.class, "GraphSwitchTopComponent.jButton2.text")); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        chartClass = BarChart.class;
        notifyGraphTypeChangeListener();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void pieSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pieSelectActionPerformed
        chartClass = PieChart.class;
        notifyGraphTypeChangeListener();
    }//GEN-LAST:event_pieSelectActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton pieSelect;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    List<ActionListener> graphTypeChangeListeners = new ArrayList();

    public void addGraphTypeChangeListener(ActionListener listener) {
        graphTypeChangeListeners.add(listener);
    }

    public void removeGraphTypeChangeListener(ActionListener listener) {
        graphTypeChangeListeners.remove(listener);
    }

    private void notifyGraphTypeChangeListener() {

        ActionEvent event = new ActionEvent(chartClass, ActionEvent.ACTION_FIRST, "Chart class changed");
        graphTypeChangeListeners.parallelStream().forEach((graphTypeChangeListener) -> {
            graphTypeChangeListener.actionPerformed(event);
        });
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
